# Manually triggered pipeline to generate shipping builds of the CI artifacts
trigger: none

variables:
- template: settings/common.yml

resources:
  repositories:
  - repository: build-tools
    type: git
    endpoint: Analog
    name: Analog/mixedrealitytoolkit.build
    ref: mru-ue

jobs:
- job:
  pool:
    name: $(AgentPool)
  timeoutInMinutes: 30
  workspace:
    clean: all
  steps:
  - checkout: self
    clean: true
    submodules: true
  - checkout: build-tools

  - template: templates/common.yml
    parameters:
      Configuration: 'Shipping'

  - task: ComponentGovernanceComponentDetection@0
    displayName: 'Component Governance'
    inputs:
      scanType: 'Register'
      alertWarningLevel: 'High'
      failOnAlert: true

  - task: NuGetToolInstaller@1
    displayName: 'Install NuGet'
    inputs:
      versionSpec: 5.9.1

  - task: EsrpCodeSigning@1
    displayName: 'Sign GraphicsTools binaries'
    inputs:
      ConnectedServiceName: 'MixedReality-GraphicsTools-Unreal-ESRP'
      FolderPath: '$(GraphicsToolsBuildDir)'
      Pattern: '**/*.dll'
      UseMinimatch: true
      signConfigType: 'inlineSignParams'
      inlineOperation: |
        [
            {
                "KeyCode" : "CP-230012",
                "OperationCode" : "SigntoolSign",
                "Parameters" : {
                    "OpusName" : "Microsoft",
                    "OpusInfo" : "http://www.microsoft.com",
                    "FileDigest" : "/fd \"SHA256\"",
                    "PageHash" : "/NPH",
                    "TimeStamp" : "/tr \"http://rfc3161.gtm.corp.microsoft.com/TSS/HttpTspServer\" /td sha256"
                },
                "ToolName" : "sign",
                "ToolVersion" : "1.0"
            },
            {
                "KeyCode" : "CP-230012",
                "OperationCode" : "SigntoolVerify",
                "Parameters" : {},
                "ToolName" : "sign",
                "ToolVersion" : "1.0"
            }
        ]
      SessionTimeout: '60'
      MaxConcurrency: '50'
      MaxRetryAttempts: '5'

  - task: EsrpCodeSigning@1
    displayName: 'Sign GraphicsToolsExamples binaries'
    inputs:
      ConnectedServiceName: 'MixedReality-GraphicsTools-Unreal-ESRP'
      FolderPath: '$(GraphicsToolsExamplesBuildDir)'
      Pattern: '**/*.dll'
      UseMinimatch: true
      signConfigType: 'inlineSignParams'
      inlineOperation: |
        [
            {
                "KeyCode" : "CP-230012",
                "OperationCode" : "SigntoolSign",
                "Parameters" : {
                    "OpusName" : "Microsoft",
                    "OpusInfo" : "http://www.microsoft.com",
                    "FileDigest" : "/fd \"SHA256\"",
                    "PageHash" : "/NPH",
                    "TimeStamp" : "/tr \"http://rfc3161.gtm.corp.microsoft.com/TSS/HttpTspServer\" /td sha256"
                },
                "ToolName" : "sign",
                "ToolVersion" : "1.0"
            },
            {
                "KeyCode" : "CP-230012",
                "OperationCode" : "SigntoolVerify",
                "Parameters" : {},
                "ToolName" : "sign",
                "ToolVersion" : "1.0"
            }
        ]
      SessionTimeout: '60'
      MaxConcurrency: '50'
      MaxRetryAttempts: '5'

  # The ESRP CodeSign task drops a summary of it's results in the plugin's output directory.
  # These should not be included in the NuGet packages so we move them to the $(NugetStagingDir) to keep them available in the build artifact.
  # $(NugetStagingDir) has not been created at this stage so we have to create it manually before calling Move-Item.
  - powershell: |
      New-Item -Path $(NugetStagingDir) -ItemType Directory
      Get-ChildItem -Path $(GraphicsToolsBuildDir)/CodeSignSummary-*.md | Move-Item -Destination $(NugetStagingDir)
      Get-ChildItem -Path $(GraphicsToolsExamplesBuildDir)/CodeSignSummary-*.md | Move-Item -Destination $(NugetStagingDir)
    displayName: 'Move signing results out of NuGet package contents'

  - task: NuGetCommand@2
    displayName: 'Create GraphicsTools NuGet package'
    inputs:
      command: 'pack'
      packagesToPack: '$(SourceDir)/GraphicsTools.nuspec'
      packDestination: '$(NugetStagingDir)'
      basePath: '$(GraphicsToolsBuildDir)'

  - task: NuGetCommand@2
    displayName: 'Create GraphicsToolsExamples NuGet package'
    inputs:
      command: 'pack'
      packagesToPack: '$(SourceDir)/GraphicsToolsExamples.nuspec'
      packDestination: '$(NugetStagingDir)'
      basePath: '$(GraphicsToolsExamplesBuildDir)'

  - task: EsrpCodeSigning@1
    displayName: 'Sign NuGet packages'
    inputs:
      ConnectedServiceName: 'MixedReality-GraphicsTools-Unreal-ESRP'
      FolderPath: '$(NugetStagingDir)'
      Pattern: '*.nupkg'
      UseMinimatch: true
      signConfigType: 'inlineSignParams'
      inlineOperation: |
        [
            {
                "KeyCode" : "CP-401405",
                "OperationCode" : "NuGetSign",
                "Parameters" : {},
                "ToolName" : "sign",
                "ToolVersion" : "1.0"
            },
            {
                "KeyCode" : "CP-401405",
                "OperationCode" : "NuGetVerify",
                "Parameters" : {},
                "ToolName" : "sign",
                "ToolVersion" : "1.0"
            }
        ]
      SessionTimeout: '60'
      MaxConcurrency: '50'
      MaxRetryAttempts: '5'

  - task: PowerShell@2
    displayName: 'Verify code signing'
    inputs:
      filePath: $(SourceDir)\Tools\scripts\SignCheck.ps1
      arguments: -packageDir $(NuGetStagingDir)

  - task: PublishBuildArtifacts@1
    displayName: 'Publish NuGet packages build artifacts'
    inputs:
      ArtifactName: 'NuGet Packages'
      PathtoPublish: '$(NugetStagingDir)'
